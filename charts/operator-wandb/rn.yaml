Release "wandb" has been upgraded. Happy Helming!
NAME: wandb
LAST DEPLOYED: Fri May  3 13:06:38 2024
NAMESPACE: default
STATUS: pending-upgrade
REVISION: 372
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: operator-wandb/charts/app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wandb-app
  namespace: default
  labels:
    
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: operator-wandb/charts/console/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wandb-console
  namespace: default
  labels:
    
    
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wandb-otel-daemonset
  labels:
    
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: operator-wandb/charts/app/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-app-config
  labels:
    
data:
  SLACK_SECRET: 
  LICENSE: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluVXphSGd5UWpReVFXaEVVWE0xTTB4UVkwOXlOblpoYVRkb1NsZHVZbkYxYlRSWlRsWldkMVZ3U1dNOUluMC5leUpqYjI1amRYSnlaVzUwUVdkbGJuUnpJam94TUN3aVpHVndiRzk1YldWdWRFbGtJam9pT0RaaE1EaGhOMlV0WVRJeE9DMDBZemczTFRsaU5UWXRObVEyWkdJME56VTNOMkkwSWl3aWJXRjRWWE5sY25NaU9qRXdNQ3dpYldGNFZtbGxkMDl1YkhsVmMyVnljeUk2TUN3aWJXRjRVM1J2Y21GblpVZGlJam94TURBd01EQXNJbTFoZUZSbFlXMXpJam94TUN3aWJXRjRVbVZuYVhOMFpYSmxaRTF2WkdWc2N5STZNVEF3TURBd01Dd2laWGh3YVhKbGMwRjBJam9pTWpBMU1DMHdPQzB5TUZRd05qbzFPVG8xT1M0NU9UbGFJaXdpWm14aFozTWlPbHNpVTBOQlRFRkNURVVpTENKdGVYTnhiQ0lzSW5Neklpd2ljbVZrYVhNaUxDSk9UMVJKUmtsRFFWUkpUMDVUSWl3aWMyeGhZMnNpTENKdWIzUnBabWxqWVhScGIyNXpJaXdpVFVGT1FVZEZUVVZPVkNJc0ltOXlaMTlrWVhOb0lpd2lZWFYwYURBaUxDSmpiMnhzWldOMFgyRjFaR2wwWDJ4dlozTWlMQ0p5WW1Gaklpd2lRbGxQUWlJc0ltSjViMklpTENKTVFWVk9RMGhmUTB4VlUxUkZVbE1pTENKc1lYVnVZMmhmWTJ4MWMzUmxjbk1pWFN3aWRISnBZV3dpT21aaGJITmxMQ0poWTJObGMzTkxaWGtpT2lJNE1HWm1ZV1F4TnkxbU56UmtMVFJoWmpjdFlqVTFaUzFoT1dZM05XTTFaalE1TXpNaUxDSnpaV0YwY3lJNk1UQXdMQ0oyYVdWM1QyNXNlVk5sWVhSeklqb3dMQ0owWldGdGN5STZNVEFzSW5KbFoybHpkR1Z5WldSTmIyUmxiSE1pT2pFd01EQXdNREFzSW5OMGIzSmhaMlZIYVdkeklqb3hNREF3TURBc0ltVjRjQ0k2TWpVME5EVTVNVFU1T1gwLmJYajVNbl9ybHRJSTNlMlIwNmU3NVQxRWFubFh3M05oT0FMUlluTXlISWxnN3B6T2NUdXp6azR5NWFDLXFVMGxkTGtySno3UHpKb1lZRG00LVN6WmszSHhwRU9QLWQ5YTkwWjdNVmp0N01keTZrMEc4c0tPekNjelpFNXQ4alhOQmV2anJFR01KMmZodnYtaWRQaXd2Y3owcjZIUDdWbXBfNlZEUTJyMlpIcjd0RmdHeFotZlpKRU1WbzZ2dHNSVzVNTGxyTmhEckNLQjdqNmNOQXVCZHVzWGVORWhPTkduaURxRjg5ZlA0dUJJNXF6NmprOGFxOUNJUHZBeWppcFVHNnlCSHUwalpMaDY1YS1qVnRHTDEwWVo3YmhQQjZlQjRpUUhUUjVOVGtGVGlsZDNLS3A3UnIyb1VDVk5JZXA0LTFYSmduYVRneFFKUnplQ0xCU0cxdw==
---
# Source: operator-wandb/templates/bucket.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-bucket
  labels:
    
data:
  ACCESS_KEY: 
  SECRET_KEY:
---
# Source: operator-wandb/templates/clickhouse.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-clickhouse
  labels:
    
data:
  CLICKHOUSE_PASSWORD:
---
# Source: operator-wandb/templates/kafka.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-kafka
  labels:
    
data:
  KAFKA_CLIENT_PASSWORD: d2FuZGI=
---
# Source: operator-wandb/templates/mysql.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-mysql
  labels:
    
data:
  MYSQL_ROOT_PASSWORD: RUxXaFdsT1g3MnA3OTlDd3ZjSjFGZVZ4NlYxak5RWTR6bFNCSnNiWmxyRGhDcEl1MjZxSlpjWWdxMkxRdXFKZw==
  MYSQL_PASSWORD: M01HdjlaVWFMZ1Z1TlpvVnBPajNiQVhQNzdWQWs4U0M=
---
# Source: operator-wandb/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wandb-redis
  labels:
    
data:
  REDIS_PASSWORD: NTZhYzYxNWQtM2I4NC00YzM0LTk3NGMtNGJjZTI2OWUzY2Ji
  REDIS_CA_CERT: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBRENCaFRFdE1Dc0dBMVVFTGhNa1ltRTEKWVdGak5qZ3ROamc1T1MwME1EY3hMVGszTW1VdE5UTTNNMkppTkdWbE9URTRNVEV3THdZRFZRUURFeWhIYjI5bgpiR1VnUTJ4dmRXUWdUV1Z0YjNKNWMzUnZjbVVnVW1Wa2FYTWdVMlZ5ZG1WeUlFTkJNUlF3RWdZRFZRUUtFd3RICmIyOW5iR1VzSUVsdVl6RUxNQWtHQTFVRUJoTUNWVk13SGhjTk1qTXdOekEzTVRZMU9EQXpXaGNOTXpNd056QTAKTVRZMU9UQXpXakNCaFRFdE1Dc0dBMVVFTGhNa1ltRTFZV0ZqTmpndE5qZzVPUzAwTURjeExUazNNbVV0TlRNMwpNMkppTkdWbE9URTRNVEV3THdZRFZRUURFeWhIYjI5bmJHVWdRMnh2ZFdRZ1RXVnRiM0o1YzNSdmNtVWdVbVZrCmFYTWdVMlZ5ZG1WeUlFTkJNUlF3RWdZRFZRUUtFd3RIYjI5bmJHVXNJRWx1WXpFTE1Ba0dBMVVFQmhNQ1ZWTXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQytxSEtDNWp0eHp3TzRCZGMyNDVtbAp1NS85OXJTT0U3VUR3dGhxOG42M3VpSzhtYjBsd29yRitjUEJZdjQwWXlyOGdmY1BYcVBuZGxsdkVJeG5sbUs4Ck92OFdsUmRWdkhRWU1tN0c0aWh3THRWOENKN2RzS1ZGU1pvZzJjRkRqYmwvZjdIbHVEcEcrMDhyMm1KTFdublgKdnp4STcreTNHSFpYNk5KN2ZRR3EyU00rQzdHMnBteXdEaUoyV1VjakJFN0NCaTdpRG5EUlU1Rk5VSG1CNnN3UQpWNWovRGNFNWFqdjhoSzBnaHVBVmJENlY0QTZFejdtcU15cTRqb29TanVxNzBtaE0yeXFDWTIvNldzV3BvZFZvCmgrOGhhZ01YMGQyV2dvSUZKUUFTQjRMYWN4eXh2SkdHaUNySTRwRFpxd2FRSDBqYlNZWmZkTjNubzFmQmpWbGwKQWdNQkFBR2pGakFVTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBSkM0Ujd6U1MwTFNWV3JjL3NaU0J6RW4xQnNXcVQxVUprbVA5QXBQbVJCdGVGKzZLVk9CK3lKcVFDYmgrcy9mCjFEdXBldDRSTDFsaDZFekI2Y2VSL0pWUEZ1Qm5PVDRGaGltU2pkRGd3SFAwUXFzN0tZbWhjUytENXhzWkxvTGoKbWJBT0hkbGNpRGdSZWQrUW01K3JnUy9EaUVnNXBHMFpaV3BJbXByTGpJMnJRWXdVQ3hrdURxM2tISU8xc0hpMApNYm5VNXUrUUsxZHUvTVFpTktZdjJjSUYzcnc2UkoxVEFsbWNuQWNBOGZKSjBzRFgzaUtHVjNzTVExUEpobnZGCmFhSXhoYmkxMEhPRkp3V0hSNUhuWGZmUURmZHRBZXVIekVSL2p6dHYrU1RaVTlyZUNvU1lpUlJOdkp6QmZFS3cKWG1WbmVkTk5nUnduczR6N2J5ckYxeFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wandb-otel-daemonset
  labels:
    
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
data:
  config: |
    exporters:
      debug: {}
      debug/detailed:
        verbosity: detailed
      prometheus:
        endpoint: 0.0.0.0:9109
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    processors:
      batch: {}
      k8sattributes:
        extract:
          annotations:
          - from: pod
            key_regex: (.*)
            tag_name: $$1
          labels:
          - from: pod
            key_regex: (.*)
            tag_name: $$1
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
    receivers:
      filelog:
        exclude: []
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - id: get-format
          routes:
          - expr: body matches "^\\{"
            output: parser-docker
          - expr: body matches "^[^ Z]+ "
            output: parser-crio
          - expr: body matches "^[^ Z]+Z"
            output: parser-containerd
          type: router
        - id: parser-crio
          regex: ^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
          timestamp:
            layout: 2006-01-02T15:04:05.999999999Z07:00
            layout_type: gotime
            parse_from: attributes.time
          type: regex_parser
        - combine_field: attributes.log
          combine_with: ""
          id: crio-recombine
          is_last_entry: attributes.logtag == 'F'
          max_log_size: 102400
          output: extract_metadata_from_filepath
          source_identifier: attributes["log.file.path"]
          type: recombine
        - id: parser-containerd
          regex: ^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
          timestamp:
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            parse_from: attributes.time
          type: regex_parser
        - combine_field: attributes.log
          combine_with: ""
          id: containerd-recombine
          is_last_entry: attributes.logtag == 'F'
          max_log_size: 102400
          output: extract_metadata_from_filepath
          source_identifier: attributes["log.file.path"]
          type: recombine
        - id: parser-docker
          output: extract_metadata_from_filepath
          timestamp:
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            parse_from: attributes.time
          type: json_parser
        - id: extract_metadata_from_filepath
          parse_from: attributes["log.file.path"]
          regex: ^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]+)\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$
          type: regex_parser
        - from: attributes.stream
          to: attributes["log.iostream"]
          type: move
        - from: attributes.container_name
          to: resource["k8s.container.name"]
          type: move
        - from: attributes.namespace
          to: resource["k8s.namespace.name"]
          type: move
        - from: attributes.pod_name
          to: resource["k8s.pod.name"]
          type: move
        - from: attributes.restart_count
          to: resource["k8s.container.restart_count"]
          type: move
        - from: attributes.uid
          to: resource["k8s.pod.uid"]
          type: move
        - from: attributes.log
          to: body
          type: move
        start_at: end
      hostmetrics:
        collection_interval: 10s
        root_path: /hostfs
        scrapers:
          cpu: null
          disk: null
          filesystem:
            exclude_fs_types:
              fs_types:
              - autofs
              - binfmt_misc
              - bpf
              - cgroup2
              - configfs
              - debugfs
              - devpts
              - devtmpfs
              - fusectl
              - hugetlbfs
              - iso9660
              - mqueue
              - nsfs
              - overlay
              - proc
              - procfs
              - pstore
              - rpc_pipefs
              - securityfs
              - selinuxfs
              - squashfs
              - sysfs
              - tracefs
              match_type: strict
            exclude_mount_points:
              match_type: regexp
              mount_points:
              - /dev/*
              - /proc/*
              - /sys/*
              - /run/k3s/containerd/*
              - /var/lib/docker/*
              - /var/lib/kubelet/*
              - /snap/*
          load: null
          memory: null
          network: null
      k8s_cluster:
        collection_interval: 10s
      k8sobjects:
        objects:
        - exclude_watch_type:
          - DELETED
          group: events.k8s.io
          mode: watch
          name: events
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 20s
        endpoint: https://${env:K8S_NODE_NAME}:10250
        insecure_skip_verify: true
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      statsd:
        endpoint: 0.0.0.0:8125
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        logs:
          exporters:
          - debug
          processors:
          - memory_limiter
          - batch
          - k8sattributes
          receivers:
          - filelog
        metrics:
          exporters:
          - debug
          - prometheus
          processors:
          - memory_limiter
          - batch
          - k8sattributes
          receivers:
          - hostmetrics
          - k8s_cluster
          - kubeletstats
        traces:
          exporters:
          - debug
          processors:
          - batch
          - memory_limiter
          - k8sattributes
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:POD_IP}:8888
---
# Source: operator-wandb/charts/console/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wandb-console
  namespace: default
  labels:
    
    
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
  # We can scope these permissions down later
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wandb-otel-daemonset
  namespace: default
  labels:
    
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
  # kubernetesAttributes
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]

  # clusterMetrics
  - apiGroups: [""]
    resources: ["events", "namespaces", "namespaces/status", "nodes", "nodes/spec", "pods", "pods/status", "replicationcontrollers", "replicationcontrollers/status", "resourcequotas", "services" ]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["daemonsets", "deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch"]

  # kubeletMetrics
  - apiGroups: [""]
    resources: ["nodes/stats"]
    verbs: ["get", "watch", "list"]

  # kubernetesEvents
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["watch", "list"]
---
# Source: operator-wandb/charts/console/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wandb-console
  labels:
    
    
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: wandb-console
subjects:
  - kind: ServiceAccount
    name: wandb-console
    namespace: default
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wandb-otel-daemonset
  labels:
    
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: wandb-otel-daemonset
subjects:
  - kind: ServiceAccount
    name: wandb-otel-daemonset
    namespace: default
---
# Source: operator-wandb/charts/app/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wandb-app
  namespace: default
  labels:
    
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get"]
---
# Source: operator-wandb/charts/app/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wandb-app
  labels:
    
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: wandb-app
subjects:
  - kind: ServiceAccount
    name: wandb-app
    namespace: default
---
# Source: operator-wandb/charts/app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-app
  labels:
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '8181'
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: app
    - port: 8181
      protocol: TCP
      name: prometheus
  selector:
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-console
  labels:
    
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    
spec:
  type: ClusterIP
  ports:
    - port: 8082
      protocol: TCP
      name: console
  selector:
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-otel-daemonset
  labels:
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '9109'
spec:
  type: 
  ports:
    - port: 9109
      protocol: TCP
      name: otel-exporter
    - port: 8125
      protocol: TCP
      name: statsd
    - port: 4317
      protocol: TCP
      name: otlp-grpc
    - port: 4318
      protocol: TCP
      name: otlp-http
  selector:
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/parquet/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-parquet
  labels:
    
    helm.sh/chart: parquet-0.1.0
    app.kubernetes.io/name: parquet
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: parquet-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 8087
      protocol: TCP
      name: parquet
  selector:
    helm.sh/chart: parquet-0.1.0
    app.kubernetes.io/name: parquet
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: parquet-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/prometheus/charts/mysql-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-prometheus-mysql-exporter
  labels:
    
    helm.sh/chart: mysql-exporter-0.1.0
    app.kubernetes.io/name: prometheus-mysql-exporter
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: mysql-exporter-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '9104'
spec:
  type: ClusterIP
  ports:
    - port: 9104
      protocol: TCP
      name: mysql-exporter
  selector:
    helm.sh/chart: mysql-exporter-0.1.0
    app.kubernetes.io/name: prometheus-mysql-exporter
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: mysql-exporter-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/prometheus/charts/redis-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-prometheus-redis-exporter
  labels:
    
    helm.sh/chart: redis-exporter-0.1.0
    app.kubernetes.io/name: prometheus-redis-exporter
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: redis-exporter-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '9121'
spec:
  type: ClusterIP
  ports:
    - port: 9121
      protocol: TCP
      name: redis-exporter
  selector:
    helm.sh/chart: redis-exporter-0.1.0
    app.kubernetes.io/name: prometheus-redis-exporter
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: redis-exporter-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/weave-traces/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-weave-traces
  labels:
    
    helm.sh/chart: weave-traces-0.1.0
    app.kubernetes.io/name: weave-traces
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-traces-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 9994
      protocol: TCP
      name: weave-traces
  selector:
    helm.sh/chart: weave-traces-0.1.0
    app.kubernetes.io/name: weave-traces
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-traces-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/weave/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wandb-weave
  labels:
    
    helm.sh/chart: weave-0.1.0
    app.kubernetes.io/name: weave
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-0.1.0
    app.kubernetes.io/managed-by: Helm
    
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 9994
      protocol: TCP
      name: weave
  selector:
    helm.sh/chart: weave-0.1.0
    app.kubernetes.io/name: weave
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-0.1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-wandb/charts/otel/charts/daemonset/templates/deamonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wandb-otel-daemonset
  labels:
    
    
    helm.sh/chart: daemonset-0.1.0
    app.kubernetes.io/name: daemonset
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: daemonset-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: daemonset
      app.kubernetes.io/instance: wandb
      helm.sh/chart: daemonset-0.1.0
      app.kubernetes.io/name: daemonset
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "0.33.0"
      wandb.com/app-name: daemonset-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: daemonset-0.1.0
        app.kubernetes.io/name: daemonset
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "0.33.0"
        wandb.com/app-name: daemonset-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/configmap: 856d9f67e969a09649fbc339e09b17b2846d16a33e9c2f541df6597c10d6cf9
    spec:
      serviceAccountName: wandb-otel-daemonset
      
      
      
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: daemonset
          image: "otel/opentelemetry-collector-contrib:0.97.0"
          command:
            - /otelcol-contrib
            - --config=/conf/config.yaml
          ports:
            - name: otlp
              containerPort: 4317
              protocol: TCP
              hostPort: 4317
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
              hostPort: 4318
            - name: prometheus
              containerPort: 9109
              protocol: TCP
              hostPort: 9109
            - name: statsd
              containerPort: 8125
              protocol: TCP
              hostPort: 8125
          env:
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_HOST
              value: "10.246.0.2"
            - name: MYSQL_DATABASE
              value: "wandb_local"
            - name: MYSQL_USER
              value: "wandb"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-mysql
                  key:  MYSQL_PASSWORD

            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - mountPath: /conf
              name: config
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: hostfs
              mountPath: /hostfs
              readOnly: true
              mountPropagation: HostToContainer
      volumes:
        - name: hostfs
          hostPath:
            path: /
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: config
          configMap:
            name: wandb-otel-daemonset
            items:
              - key: config
                path: config.yaml
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
      hostNetwork: false
---
# Source: operator-wandb/charts/app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandb-app
  labels:
    
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app
      app.kubernetes.io/instance: wandb
      helm.sh/chart: app-0.1.0
      app.kubernetes.io/name: app
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "0.33.0"
      wandb.com/app-name: app-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: app-0.1.0
        app.kubernetes.io/name: app
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "0.33.0"
        wandb.com/app-name: app-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/secret: d7b79bf99d80c13615290d5fe1f199d5fdc035ee086b8ed61b01e55dd3045881
    spec:
      serviceAccountName: wandb-app
      
      
      
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
      # Extend the pods shutdown grace period from the default of 30s to 60s.
      # This goes in the pod template spec.
      terminationGracePeriodSeconds: 60
      initContainers:
        - name: init-db
          image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
          env:
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_HOST
              value: "10.246.0.2"
            - name: MYSQL_DATABASE
              value: "wandb_local"
            - name: MYSQL_USER
              value: "wandb"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-mysql
                  key:  MYSQL_PASSWORD
          command: ['bash', '-c', "until mysql -h$MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASSWORD -D$MYSQL_DATABASE --execute=\"SELECT 1\"; do echo waiting for db; sleep 2; done"]
      containers:
        - name: app
          image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
          volumeMounts:
            - name: wandb-app-redis-ca
              mountPath: /etc/ssl/certs/redis_ca.pem
              subPath: redis_ca.pem
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: prometheus
              containerPort: 8181
              protocol: TCP
            - name: gorilla-statsd
              containerPort: 8125
              protocol: TCP
          env:
            - name: HOST
              value: "https://qa-google.wandb.io"

            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_HOST
              value: "10.246.0.2"
            - name: MYSQL_DATABASE
              value: "wandb_local"
            - name: MYSQL_USER
              value: "wandb"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-mysql
                  key:  MYSQL_PASSWORD
            - name: MYSQL
              value: "mysql://$(MYSQL_USER):$(MYSQL_PASSWORD)@$(MYSQL_HOST):$(MYSQL_PORT)/$(MYSQL_DATABASE)"

            - name: WEAVE_SERVICE
              value: "wandb-weave:9994"
            - name: PARQUET_HOST
              value: "http://wandb-parquet:8087"
            - name: PARQUET_ENABLED
              value: "true"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-redis
                  key: REDIS_PASSWORD
            - name: REDIS_PORT
              value: "6378"
            - name: REDIS_HOST
              value: "10.30.0.4"
            - name: REDIS
              value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)?tls=true&caCertPath=/etc/ssl/certs/redis_ca.pem&ttlInSeconds=604800"

            - name: SLACK_CLIENT_ID
              value: ""
            - name: SLACK_SECRET
              valueFrom:
                secretKeyRef:
                  name: wandb-app-config
                  key: SLACK_SECRET
                  optional: true

            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: wandb-app-config
                  key: LICENSE
                  optional: true
            - name: GORILLA_LICENSE
              valueFrom:
                secretKeyRef:
                  name: wandb-app-config
                  key: LICENSE
                  optional: true

            - name: GORILLA_SESSION_LENGTH
              value: "24h"

            - name: BUCKET
              value: "gs://wandb-qa-local-whole-crow"
            - name: AWS_REGION
              value: 
            - name: AWS_S3_KMS_ID
              value: ""

            - name: OPERATOR_ENABLED
              value: 'true'

            - name: LOGGING_ENABLED
              value: 'true'

            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: "wandb-bucket"
                  key: ACCESS_KEY
                  optional: true
            
            - name: GORILLA_CUSTOMER_SECRET_STORE_K8S_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: G_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

            - name: BANNERS
              value: "{}"
            - name: GORILLA_TRACER
              value: "otlp+grpc://wandb-otel-daemonset:4317?trace_ratio=0.01"
            - name: KAFKA_BROKER_HOST
              value: "wandb-kafka"
            - name: KAFKA_BROKER_PORT
              value: "9092"
            - name: KAFKA_CLIENT_USER
              value: "wandb"
            - name: KAFKA_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-kafka
                  key: KAFKA_CLIENT_PASSWORD
            - name: KAFKA_TOPIC_RUN_UPDATE_SHADOW_QUEUE
              value: wandb-run-updates-shadow
            - name: OVERFLOW_BUCKET_ADDR
              value: "gs://wandb-qa-local-whole-crow"
            - name: GORILLA_RUN_UPDATE_SHADOW_QUEUE
              value: >
                {
                  "overflow-bucket": {
                    "store": "$(OVERFLOW_BUCKET_ADDR)",
                    "name": "wandb",
                    "prefix": "wandb-overflow"
                  },
                  "addr": "kafka://$(KAFKA_CLIENT_USER):$(KAFKA_CLIENT_PASSWORD)@$(KAFKA_BROKER_HOST):$(KAFKA_BROKER_PORT)/$(KAFKA_TOPIC_RUN_UPDATE_SHADOW_QUEUE)?producer_batch_bytes=1048576"
                }
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 120
          # Increase the sleep before SIGTERM to 25s. I had this as 5s previously and it wasn't enough.
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "25"]

          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 500m
              memory: 1Gi
      volumes:
        - name: wandb-app-redis-ca
          secret:
            secretName: "wandb-redis"
            items:
              - key: REDIS_CA_CERT
                path: redis_ca.pem
---
# Source: operator-wandb/charts/console/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandb-console
  labels:
    
    
    helm.sh/chart: console-0.1.0
    app.kubernetes.io/name: console
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.16.0"
    wandb.com/app-name: console-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: console
      app.kubernetes.io/instance: wandb
      helm.sh/chart: console-0.1.0
      app.kubernetes.io/name: console
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "1.16.0"
      wandb.com/app-name: console-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: console-0.1.0
        app.kubernetes.io/name: console
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "1.16.0"
        wandb.com/app-name: console-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      serviceAccountName: wandb-console
      
      
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      # Extend the pods shutdown grace period from the default of 30s to 60s.
      # This goes in the pod template spec.
      terminationGracePeriodSeconds: 60
      containers:
        - name: console
          image: "wandb/console:2.1.1"
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
          env:
            - name: AUTH_SERVICE
              value: wandb-app:8080
            - name: OPERATOR_NAMESPACE
              value: wandb
            - name: RELEASE_NAME
              value: wandb
            - name: RELEASE_NAMESPACE
              value: default
            - name: PROMETHEUS_SERVER
              value: "http://wandb-prometheus-server"
            - name: BANNERS
              value: "{}"

            - name: G_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: TESTING
              value: "true"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            
          livenessProbe:
            httpGet:
              path: /console/api/healthz
              port: http
          readinessProbe:
            httpGet:
              path: /console/api/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /console/api/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 120
          # Increase the sleep before SIGTERM to 25s. I had this as 5s previously and it wasn't enough.
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "25"]

          resources:
            limits:
              cpu: 1
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
---
# Source: operator-wandb/charts/parquet/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandb-parquet
  labels:
    
    
    helm.sh/chart: parquet-0.1.0
    app.kubernetes.io/name: parquet
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: parquet-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: parquet
      app.kubernetes.io/instance: wandb
      helm.sh/chart: parquet-0.1.0
      app.kubernetes.io/name: parquet
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "1.0.0"
      wandb.com/app-name: parquet-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: parquet-0.1.0
        app.kubernetes.io/name: parquet
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "1.0.0"
        wandb.com/app-name: parquet-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      
      
      securityContext:
        runAsUser: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: parquet
          image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
          volumeMounts:
            - name: wandb-parquet-redis-ca
              mountPath: /etc/ssl/certs/redis_ca.pem
              subPath: redis_ca.pem
          ports:
            - name: parquet
              containerPort: 8087
              protocol: TCP
          env:
            - name: ONLY_SERVICE
              value: gorilla-parquet
            - name: LOGGING_ENABLED
              value: 'true'
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_HOST
              value: "10.246.0.2"
            - name: MYSQL_DATABASE
              value: "wandb_local"
            - name: MYSQL_USER
              value: "wandb"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-mysql
                  key:  MYSQL_PASSWORD
            - name: MYSQL
              value: "mysql://$(MYSQL_USER):$(MYSQL_PASSWORD)@$(MYSQL_HOST):$(MYSQL_PORT)/$(MYSQL_DATABASE)"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wandb-redis
                  key: REDIS_PASSWORD
            - name: REDIS_PORT
              value: "6378"
            - name: REDIS_HOST
              value: "10.30.0.4"
            - name: REDIS
              value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)?tls=true&caCertPath=/etc/ssl/certs/redis_ca.pem&ttlInSeconds=604800"

            - name: GORILLA_SETTINGS_CACHE
              value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)?tls=true&caCertPath=/etc/ssl/certs/redis_ca.pem&ttlInSeconds=604800"

            - name: BUCKET
              value: "gs://wandb-qa-local-whole-crow"
            - name: AWS_REGION
              value: 
            - name: AWS_S3_KMS_ID
              value: ""
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: "wandb-bucket"
                  key: ACCESS_KEY
                  optional: true

            - name: G_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            

          livenessProbe:
            httpGet:
              path: /ready 
              port: 8087
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /ready 
              port: 8087
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          
          resources:
            limits:
              cpu: 8
              memory: 16Gi
            requests:
              cpu: 1
              memory: 2Gi
      volumes:
        - name: wandb-parquet-redis-ca
          secret:
            secretName: "wandb-redis"
            items:
              - key: REDIS_CA_CERT
                path: redis_ca.pem
---
# Source: operator-wandb/charts/weave-traces/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandb-weave-traces
  labels:
    
    
    helm.sh/chart: weave-traces-0.1.0
    app.kubernetes.io/name: weave-traces
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-traces-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: weave-traces
      app.kubernetes.io/instance: wandb
      helm.sh/chart: weave-traces-0.1.0
      app.kubernetes.io/name: weave-traces
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "1.0.0"
      wandb.com/app-name: weave-traces-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: weave-traces-0.1.0
        app.kubernetes.io/name: weave-traces
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "1.0.0"
        wandb.com/app-name: weave-traces-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      
      
      securityContext:
        runAsUser: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: wandb-weave-traces
          image: "wandb/local:latest"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: PORT
              value: "8080"
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 12
            periodSeconds: 10

          resources:
            limits:
              cpu: 4000m
              memory: 16Gi
            requests:
              cpu: 500m
              memory: 1Gi
---
# Source: operator-wandb/charts/weave/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandb-weave
  labels:
    
    
    helm.sh/chart: weave-0.1.0
    app.kubernetes.io/name: weave
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: weave
      app.kubernetes.io/instance: wandb
      helm.sh/chart: weave-0.1.0
      app.kubernetes.io/name: weave
      app.kubernetes.io/instance: wandb
      app.kubernetes.io/version: "1.0.0"
      wandb.com/app-name: weave-0.1.0
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        
        
        
        helm.sh/chart: weave-0.1.0
        app.kubernetes.io/name: weave
        app.kubernetes.io/instance: wandb
        app.kubernetes.io/version: "1.0.0"
        wandb.com/app-name: weave-0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      
      
      securityContext:
        runAsUser: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: wandb-weave
          image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
          ports:
            - name: http
              containerPort: 9994
              protocol: TCP
          env:
            - name: ONLY_SERVICE
              value: weave
            - name: WANDB_BASE_URL
              value: https://qa-google.wandb.io
            - name: WEAVE_LOG_FORMAT
              value: json
            - name: WEAVE_LOCAL_ARTIFACT_DIR
              value: /vol/weave/cache
            - name: WEAVE_AUTH_GRAPHQL_URL
              value: http://wandb-app.default.svc.cluster.local:8080/graphql
            - name: WEAVE_SERVER_NUM_WORKERS
              value: "4"
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            
          livenessProbe:
            httpGet:
              path: /__weave/hello
              port: http
          readinessProbe:
            httpGet:
              path: /__weave/hello
              port: http
          startupProbe:
            httpGet:
              path: /__weave/hello
              port: http
            failureThreshold: 12
            periodSeconds: 10

          resources:
            limits:
              cpu: 4000m
              memory: 16Gi
            requests:
              cpu: 500m
              memory: 1Gi

          volumeMounts:
            - name: cache
              mountPath: /vol/weave/cache

        - name: wandb-weave-cache-clear
          image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
          command: ["python", "-m", "weave.clear_cache"]
            
          env:
            - name: WEAVE_LOCAL_ARTIFACT_DIR
              value: /vol/weave/cache
            - name: WEAVE_CACHE_CLEAR_INTERVAL
              value: "24"
            
            - name: BUCKET_QUEUE
              value: "internal://"
            - name: DD_AGENT_HOST
              value: "datadog.datadog"
            - name: DD_DOGSTATSD_URL
              value: "udp://datadog.datadog:8125"
            - name: DD_ENV
              value: "managed-install"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_SERVICE
              value: "weave-python"
            - name: DD_TRACE_AGENT_HOSTNAME
              value: "datadog.datadog"
            - name: DISABLE_WEAVE_PII
              value: "true"
            - name: ENABLE_CHAMELEON
              value: "true"
            - name: ENABLE_RBAC_UI
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_ENABLE
              value: "true"
            - name: GORILLA_ACTIVITY_STORE_SERVE
              value: "true"
            - name: GORILLA_ARTIFACT_GC_ENABLED
              value: "false"
            - name: GORILLA_CORS_ORIGINS
              value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
            - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
              value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
            - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
              value: "false"
            - name: GORILLA_DISABLE_CODE_SAVING
              value: "false"
            - name: GORILLA_DISABLE_PERSONAL_ENTITY
              value: "false"
            - name: GORILLA_LOG_AUTH_CHECK_DIFFS
              value: "true"
            - name: GORILLA_STATSD_HOST
              value: "datadog.datadog"
            - name: GORILLA_STATSD_PORT
              value: "8125"
            - name: OIDC_AUTH_METHOD
              value: "implicit"
            - name: OIDC_CLIENT_ID
              value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
            - name: OIDC_ISSUER
              value: "https://wandb-qa.auth0.com"
            - name: OIDC_SECRET
              value: ""
            - name: SERVER_FLAG_FOO
              value: "bar"
            - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
              value: "true"
            - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
              value: "100"
            - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
              value: "100"
            - name: TAG_CLOUD
              value: "Google"
            - name: TAG_CUSTOMER_NS
              value: "wandb-qa-local"
            - name: WEAVE_CACHE_DURATION_DAYS
              value: "7"
            - name: WEAVE_ENABLED
              value: "true"
            - name: WEAVE_OBS_CUSTOMER_NS
              value: "wandb-qa-local"
            

          volumeMounts:
            - name: cache
              mountPath: /vol/weave/cache

      volumes:
        - name: cache
          emptyDir: 
            sizeLimit: 20Gi
            medium:
---
# Source: operator-wandb/charts/app/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: wandb-app
  namespace: default
  labels:
    
    
    helm.sh/chart: app-0.1.0
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "0.33.0"
    wandb.com/app-name: app-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wandb-app
  minReplicas: 1
  maxReplicas: 1
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# Source: operator-wandb/charts/weave-traces/templates/deployment.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name:  wandb-weave-traces
  labels:
    
    
    helm.sh/chart: weave-traces-0.1.0
    app.kubernetes.io/name: weave-traces
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-traces-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wandb-weave-traces
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# Source: operator-wandb/charts/weave/templates/deployment.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name:  wandb-weave
  namespace: default
  labels:
    
    
    helm.sh/chart: weave-0.1.0
    app.kubernetes.io/name: weave
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: weave-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wandb-weave
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# Source: operator-wandb/charts/parquet/templates/cron.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: wandb-parquet-backfill
  labels:
    
    
    helm.sh/chart: parquet-0.1.0
    app.kubernetes.io/name: parquet
    app.kubernetes.io/instance: wandb
    app.kubernetes.io/version: "1.0.0"
    wandb.com/app-name: parquet-0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  schedule: "11 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            
            
            
            helm.sh/chart: parquet-0.1.0
            app.kubernetes.io/name: parquet
            app.kubernetes.io/instance: wandb
            app.kubernetes.io/version: "1.0.0"
            wandb.com/app-name: parquet-0.1.0
            app.kubernetes.io/managed-by: Helm
          annotations:
        spec:
          
          
          
          securityContext:
            runAsUser: 999
            fsGroupChangePolicy: OnRootMismatch
          containers:
            - name: backfill-job
              image: "wandb/local-dev:0.53.0-direct-5-1-14-30.0"
              command: [
                "/sbin/my_init",
                "--skip-runit",
                "megabinary",
                "glue",
              ]

              env:
                - name: GORILLA_GLUE_EXECUTE
                  value: "true"
                - name: GORILLA_GLUE_EXECUTE_TASK_NAME
                  value: "EXPORTHISTORYTOPARQUET"

                - name: MYSQL_PORT
                  value: "3306"
                - name: MYSQL_HOST
                  value: "10.246.0.2"
                - name: MYSQL_DATABASE
                  value: "wandb_local"
                - name: MYSQL_USER
                  value: "wandb"
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: wandb-mysql
                      key:  MYSQL_PASSWORD
                - name: MYSQL
                  value: "mysql://$(MYSQL_USER):$(MYSQL_PASSWORD)@$(MYSQL_HOST):$(MYSQL_PORT)/$(MYSQL_DATABASE)"
                - name: REDIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: wandb-redis
                      key: REDIS_PASSWORD
                - name: REDIS_PORT
                  value: "6378"
                - name: REDIS_HOST
                  value: "10.30.0.4"
                - name: REDIS
                  value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)?tls=true&caCertPath=/etc/ssl/certs/redis_ca.pem&ttlInSeconds=604800"

                - name: GORILLA_SETTINGS_CACHE
                  value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)?tls=true&caCertPath=/etc/ssl/certs/redis_ca.pem&ttlInSeconds=604800"

                - name: WEAVE_SERVICE
                  value: "wandb-weave:9994"
                - name: PARQUET_HOST
                  value: "http://wandb-parquet:8087"
                - name: PARQUET_ENABLED
                  value: "true"

                - name: OPERATOR_ENABLED
                  value: 'true'

                - name: LOGGING_ENABLED
                  value: 'true'

                - name: BUCKET
                  value: "gs://wandb-qa-local-whole-crow"
                - name: AWS_REGION
                  value: 
                - name: AWS_S3_KMS_ID
                  value: ""

                - name: AZURE_STORAGE_KEY
                  valueFrom:
                    secretKeyRef:
                      name: "wandb-bucket"
                      key: ACCESS_KEY
                      optional: true
                
                - name: G_HOST_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.hostIP
                
                - name: BUCKET_QUEUE
                  value: "internal://"
                - name: DD_AGENT_HOST
                  value: "datadog.datadog"
                - name: DD_DOGSTATSD_URL
                  value: "udp://datadog.datadog:8125"
                - name: DD_ENV
                  value: "managed-install"
                - name: DD_PROFILING_ENABLED
                  value: "true"
                - name: DD_SERVICE
                  value: "weave-python"
                - name: DD_TRACE_AGENT_HOSTNAME
                  value: "datadog.datadog"
                - name: DISABLE_WEAVE_PII
                  value: "true"
                - name: ENABLE_CHAMELEON
                  value: "true"
                - name: ENABLE_RBAC_UI
                  value: "true"
                - name: GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE
                  value: "true"
                - name: GORILLA_ACTIVITY_STORE_ENABLE
                  value: "true"
                - name: GORILLA_ACTIVITY_STORE_SERVE
                  value: "true"
                - name: GORILLA_ARTIFACT_GC_ENABLED
                  value: "false"
                - name: GORILLA_CORS_ORIGINS
                  value: "https://app.wandb.test,https://beta.wandb.ai/,https://localhost:5173,http://localhost:5173,http://localhost:3000,https://localhost:3000\n"
                - name: GORILLA_CUSTOMER_SECRET_STORE_SOURCE
                  value: "gcp-secretmanager://wandb-qa?namespace=wandb-qa-local"
                - name: GORILLA_DISABLE_ADMIN_TEAM_ACCESS
                  value: "false"
                - name: GORILLA_DISABLE_CODE_SAVING
                  value: "false"
                - name: GORILLA_DISABLE_PERSONAL_ENTITY
                  value: "false"
                - name: GORILLA_LOG_AUTH_CHECK_DIFFS
                  value: "true"
                - name: GORILLA_STATSD_HOST
                  value: "datadog.datadog"
                - name: GORILLA_STATSD_PORT
                  value: "8125"
                - name: OIDC_AUTH_METHOD
                  value: "implicit"
                - name: OIDC_CLIENT_ID
                  value: "CSDxxd4NSVKHVGfppljRZAVFXVRZOKpz"
                - name: OIDC_ISSUER
                  value: "https://wandb-qa.auth0.com"
                - name: OIDC_SECRET
                  value: ""
                - name: SERVER_FLAG_FOO
                  value: "bar"
                - name: SERVER_FLAG_NAMED_WORKSPACES_AVAILABLE
                  value: "true"
                - name: SERVER_FLAG_WEAVE_1_PERCENTAGE
                  value: "100"
                - name: SERVER_FLAG_WEAVE_SHADOW_PERCENTAGE
                  value: "100"
                - name: TAG_CLOUD
                  value: "Google"
                - name: TAG_CUSTOMER_NS
                  value: "wandb-qa-local"
                - name: WEAVE_CACHE_DURATION_DAYS
                  value: "7"
                - name: WEAVE_ENABLED
                  value: "true"
                - name: WEAVE_OBS_CUSTOMER_NS
                  value: "wandb-qa-local"
                
          restartPolicy: Never
---
# Source: operator-wandb/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wandb-qa-local
  labels:
    
  annotations:
    ingress.gcp.kubernetes.io/pre-shared-cert: wandb-qa-local-cert-content-hawk
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: wandb-qa-local-operator-address
spec:
  ingressClassName: 
  tls: 
    []

  rules:
  - host: qa-google.wandb.io
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: wandb-app
            port: 
              number: 8080
      - pathType: Prefix
        path: /console
        backend:
          service:
            name: wandb-console
            port:
              number: 8082

