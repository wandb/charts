---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-config
  labels:
    app: clickhouse
data:
  ch-server-0.xml: |
        <clickhouse replace="true">
            <max_partition_size_to_drop>0</max_partition_size_to_drop>
            <profiles>
            <default></default>
            </profiles>
            <users>
            <default>
                <password>{{ .Values.clickhouse.password }}</password>
                <access_management>1</access_management>
                <profile>default</profile>
            </default>
            </users>
            <logger>
            <level>{{ .Values.clickhouse.logger.level }}</level>
            <console>{{ .Values.clickhouse.logger.console }}</console>
            <log remove="remove"/>
            <errorlog remove="remove"/>
            </logger>
            <display_name>{{ .Values.clickhouse.displayName }}</display_name>
            <listen_host>{{ .Values.clickhouse.listenHost }}</listen_host>
            <http_port>{{ .Values.clickhouse.httpPort }}</http_port>
            <tcp_port>{{ .Values.clickhouse.tcpPort }}</tcp_port>
            <interserver_http_port>{{ .Values.clickhouse.interserverHttpPort }}</interserver_http_port>
            <distributed_ddl>
            <path>{{ .Values.clickhouse.distributedDdlPath }}</path>
            </distributed_ddl>
            <remote_servers>
            <wandb_weave>
                <shard>
                <internal_replication>{{ .Values.clickhouse.internalReplication }}</internal_replication>
                {{- range .Values.clickhouse.replicas }}
                <replica>
                    <host>{{ .host }}</host>
                    <port>{{ .port }}</port>
                </replica>
                {{- end }}
                </shard>
            </wandb_weave>
            </remote_servers>
            <zookeeper>
            {{- range .Values.clickhouse.zookeeper.nodes }}
            <node>
                <host>{{ .host }}</host>
                <port>{{ .port }}</port>
            </node>
            {{- end }}
            </zookeeper>
            <macros>
            <shard>{{ .Values.clickhouse.macros.shard }}</shard>
            <replica>{{ .Values.clickhouse.macros.replica }}</replica>
            <cluster>{{ .Values.clickhouse.macros.cluster }}</cluster>
            </macros>
            <merge_tree>
            <storage_policy>{{ .Values.clickhouse.storagePolicy }}</storage_policy>
            </merge_tree>
            <storage_configuration>
            <disks>
                <s3_disk>
                <type>s3</type>
                <endpoint>{{ .Values.clickhouse.s3Disk.endpoint }}</endpoint>
                <access_key_id>{{ .Values.clickhouse.s3Disk.accessKeyId }}</access_key_id>
                <secret_access_key>{{ .Values.clickhouse.s3Disk.secretAccessKey }}</secret_access_key>
                <metadata_path>{{ .Values.clickhouse.s3Disk.metadataPath }}</metadata_path>
                </s3_disk>
                <s3_cache>
                <type>cache</type>
                <disk>s3_disk</disk>
                <path>{{ .Values.clickhouse.s3Cache.path }}</path>
                <max_size>{{ .Values.clickhouse.s3Cache.maxSize }}</max_size>
                <enable_filesystem_cache_on_write_operations>{{ .Values.clickhouse.s3Cache.enableFilesystemCacheOnWriteOperations }}</enable_filesystem_cache_on_write_operations>
                <cache_on_write_operations>{{ .Values.clickhouse.s3Cache.cacheOnWriteOperations }}</cache_on_write_operations>
                </s3_cache>
            </disks>
            <policies>
                <s3_main>
                <volumes>
                    <main>
                    <disk>s3_cache</disk>
                    </main>
                </volumes>
                </s3_main>
            </policies>
            </storage_configuration>
        </clickhouse>
    ch-server-1.xml: |
        <clickhouse replace="true">
            <max_partition_size_to_drop>0</max_partition_size_to_drop>
            <profiles>
                <!-- Default settings -->
                <default></default>
            </profiles>
            <users>
                <default>
                    <password>{{ .Values.clickhouse.password }}</password> <!-- You can also use no_password for no authentication -->
                    <access_management>1</access_management>
                    <profile>default</profile>
                </default>
            </users>
            <logger>
                <level>{{ .Values.clickhouse.logger.level }}</level>
                <console>{{ .Values.clickhouse.logger.console }}</console>
                <log remove="remove"/>
                <errorlog remove="remove"/>
            </logger>
            <display_name>{{ .Values.clickhouse.displayName }} node_2</display_name>
            <listen_host>{{ .Values.clickhouse.listenHost }}</listen_host>
            <http_port>{{ .Values.clickhouse.httpPort }}</http_port>
            <tcp_port>{{ .Values.clickhouse.tcpPort }}</tcp_port>
            <interserver_http_port>{{ .Values.clickhouse.interserverHttpPort }}</interserver_http_port>
            <distributed_ddl>
                <path>{{ .Values.clickhouse.distributedDdlPath }}</path>
            </distributed_ddl>
            <remote_servers>
                <wandb_weave>
                    <shard>
                        <internal_replication>{{ .Values.clickhouse.internalReplication }}</internal_replication>
                        {{- range .Values.clickhouse.replicas }}
                        <replica>
                            <host>{{ .host }}</host>
                            <port>{{ .port }}</port>
                        </replica>
                        {{- end }}
                    </shard>
                </wandb_weave>
            </remote_servers>
            <zookeeper>
                {{- range .Values.clickhouse.zookeeper.nodes }}
                <node>
                    <host>{{ .host }}</host>
                    <port>{{ .port }}</port>
                </node>
                {{- end }}
            </zookeeper>
            <macros>
                <shard>{{ .Values.clickhouse.macros.shard }}</shard>
                <replica>02</replica>
                <cluster>{{ .Values.clickhouse.macros.cluster }}</cluster>
            </macros>
            <merge_tree>
                <storage_policy>{{ .Values.clickhouse.storagePolicy }}</storage_policy>
            </merge_tree>
            <storage_configuration>
                <disks>
                    <s3_disk>
                        <type>s3</type>
                        <endpoint>{{ .Values.clickhouse.s3Disk.endpoint }}/node_2</endpoint>
                        <access_key_id>{{ .Values.clickhouse.s3Disk.accessKeyId }}</access_key_id>
                        <secret_access_key>{{ .Values.clickhouse.s3Disk.secretAccessKey }}</secret_access_key>
                        <metadata_path>{{ .Values.clickhouse.s3Disk.metadataPath }}</metadata_path>
                    </s3_disk>
                    <s3_cache>
                        <type>cache</type>
                        <disk>s3_disk</disk>
                        <path>{{ .Values.clickhouse.s3Cache.path }}</path>
                        <max_size>{{ .Values.clickhouse.s3Cache.maxSize }}</max_size>
                        <enable_filesystem_cache_on_write_operations>{{ .Values.clickhouse.s3Cache.enableFilesystemCacheOnWriteOperations }}</enable_filesystem_cache_on_write_operations>
                        <cache_on_write_operations>{{ .Values.clickhouse.s3Cache.cacheOnWriteOperations }}</cache_on_write_operations>
                    </s3_cache>
                </disks>
                <policies>
                    <s3_main>
                        <volumes>
                        <main>
                            <disk>s3_cache</disk>
                        </main>
                        </volumes>
                    </s3_main>
                </policies>
            </storage_configuration>            
        </clickhouse>
    ch-server-2.xml: |
        <clickhouse replace="true">
            <max_partition_size_to_drop>0</max_partition_size_to_drop>
            <profiles>
                <!-- Default settings -->
                <default></default>
            </profiles>
            <users>
                <default>
                    <password>{{ .Values.clickhouse.password }}</password> <!-- You can also use no_password for no authentication -->
                    <access_management>1</access_management>
                    <profile>default</profile>
                </default>
            </users>
            <logger>
                <level>{{ .Values.clickhouse.logger.level }}</level>
                <console>{{ .Values.clickhouse.logger.console }}</console>
                <log remove="remove"/>
                <errorlog remove="remove"/>
            </logger>
            <display_name>{{ .Values.clickhouse.displayName }} node_3</display_name>
            <listen_host>{{ .Values.clickhouse.listenHost }}</listen_host>
            <http_port>{{ .Values.clickhouse.httpPort }}</http_port>
            <tcp_port>{{ .Values.clickhouse.tcpPort }}</tcp_port>
            <interserver_http_port>{{ .Values.clickhouse.interserverHttpPort }}</interserver_http_port>
            <distributed_ddl>
                <path>{{ .Values.clickhouse.distributedDdlPath }}</path>
            </distributed_ddl>
            <remote_servers>
                <wandb_weave>
                    <shard>
                        <internal_replication>{{ .Values.clickhouse.internalReplication }}</internal_replication>
                        {{- range .Values.clickhouse.replicas }}
                        <replica>
                            <host>{{ .host }}</host>
                            <port>{{ .port }}</port>
                        </replica>
                        {{- end }}
                    </shard>
                </wandb_weave>
            </remote_servers>
            <zookeeper>
                {{- range .Values.clickhouse.zookeeper.nodes }}
                <node>
                    <host>{{ .host }}</host>
                    <port>{{ .port }}</port>
                </node>
                {{- end }}
            </zookeeper>
            <macros>
                <shard>{{ .Values.clickhouse.macros.shard }}</shard>
                <replica>03</replica>
                <cluster>{{ .Values.clickhouse.macros.cluster }}</cluster>
            </macros>
            <merge_tree>
                <storage_policy>{{ .Values.clickhouse.storagePolicy }}</storage_policy>
            </merge_tree>
            <storage_configuration>
                <disks>
                    <s3_disk>
                        <type>s3</type>
                        <endpoint>{{ .Values.clickhouse.s3Disk.endpoint }}/node_3</endpoint>
                        <access_key_id>{{ .Values.clickhouse.s3Disk.accessKeyId }}</access_key_id>
                        <secret_access_key>{{ .Values.clickhouse.s3Disk.secretAccessKey }}</secret_access_key>
                        <metadata_path>{{ .Values.clickhouse.s3Disk.metadataPath }}</metadata_path>
                    </s3_disk>
                    <s3_cache>
                        <type>cache</type>
                        <disk>s3_disk</disk>
                        <path>{{ .Values.clickhouse.s3Cache.path }}</path>
                        <max_size>{{ .Values.clickhouse.s3Cache.maxSize }}</max_size>
                        <enable_filesystem_cache_on_write_operations>{{ .Values.clickhouse.s3Cache.enableFilesystemCacheOnWriteOperations }}</enable_filesystem_cache_on_write_operations>
                        <cache_on_write_operations>{{ .Values.clickhouse.s3Cache.cacheOnWriteOperations }}</cache_on_write_operations>
                    </s3_cache>
                </disks>
                <policies>
                    <s3_main>
                        <volumes>
                        <main>
                            <disk>s3_cache</disk>
                        </main>
                        </volumes>
                    </s3_main>
                </policies>
            </storage_configuration>            
        </clickhouse>
