apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-gorilla-secret
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
stringData:
  {{- if ne .Values.global.email.smtp.host "" }}
  GORILLA_EMAIL_SINK: "smtp://{{ .Values.global.email.smtp.user }}:{{ .Values.global.email.smtp.password }}@{{ .Values.global.email.smtp.host }}:{{ .Values.global.email.smtp.port }}"
  {{- else }}
  GORILLA_EMAIL_SINK: "https://api.wandb.ai/email/dispatch"
  {{- end }}
  SLACK_SECRET: {{ default "" .Values.global.slack.secret | b64enc }}
  {{- if and (not .Values.global.licenseSecret.name) (not .Values.global.licenseSecret.key) .Values.global.license }}
  LICENSE: {{ .Values.global.license | b64enc }}
  GORILLA_LICENSE: {{ .Values.global.license | b64enc }}
  {{- end }}
  {{- if ne .Values.global.auth.oidc.clientId ""  }}
  OIDC_CLIENT_SECRET: {{ .Values.global.auth.oidc.secret }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-gorilla-configmap
  labels:
      {{- include "wandb.commonLabels" . | nindent 4 }}
data:
  AWS_REGION: "{{ .Values.global.bucket.region | default .Values.global.defaultBucket.region }}"
  AWS_S3_KMS_ID: "{{ .Values.global.bucket.kmsKey | default .Values.global.defaultBucket.kmsKey }}"
  BANNERS: {{ toJson .Values.global.banners | quote }}
  BUCKET: "{{ include "wandb.bucket" . }}"
  OPERATOR_ENABLED: 'true'
  LOGGING_ENABLED: 'true'
  {{- if ne .Values.global.auth.oidc.clientId ""  }}
  OIDC_CLIENT_ID: {{ .Values.global.auth.oidc.clientId }}
  OIDC_AUTH_METHOD: {{ .Values.global.auth.oidc.authMethod }}
  OIDC_ISSUER: {{ .Values.global.auth.oidc.issuer }}
  {{- end }}
  GORILLA_SESSION_LENGTH: "{{ .Values.global.auth.sessionLengthHours }}h"
  {{- if and .Values.global .Values.global.observability }}
    {{- if eq (default "custom" .Values.global.observability.mode) "otel" }}
  GORILLA_STATSD_PORT: "8125"
  GORILLA_STATSD_HOST: "0.0.0.0"
    {{- end }}
  {{- end }}
  {{- if ne .Values.app.traceRatio 0.0 }}
  GORILLA_TRACER: "otlp+grpc://{{ .Release.Name }}-otel-daemonset:4317?trace_ratio={{ .Values.app.traceRatio }}"
  {{- end }}
  WEAVE_SERVICE: "{{ .Release.Name }}-weave:9994"
  PARQUET_HOST: "http://{{ .Release.Name }}-parquet:8087"
  PARQUET_ENABLED: "true"
  {{- if index .Values.global "weave-trace" "enabled" }}
  WEAVE_TRACES_ENABLED: "true"
  {{- end }}
  {{- if .Values.extraCors }}
  GORILLA_CORS_ORIGINS: "{{ join "," .Values.extraCors }}"
  {{- end }}
  GORILLA_SWEEP_PROVIDER: "{{ .Values.global.sweepProvider | default (printf "http://127.0.0.1:8082") }}"
  GORILLA_VIEW_SPEC_UPDATER_EXECUTABLE: "/usr/local/bin/view-spec-updater-linux"
  GORILLA_LIMITER: "noop://"
  GORILLA_PARQUET_RPC_PATH: "/_goRPC_"
  GORILLA_SCHEMA_FILE: "/schema.graphql"
  GORILLA_PORT: "8081"
  GORILLA_ACTIVITY_STORE_ENABLE: "true"
  GORILLA_RUN_STORE_ONPREM_MIGRATE_DISABLE_READS: "false"
  GORILLA_GLUE_TASK_STORE: "memory://"
  GORILLA_COLLECT_AUDIT_LOGS: "true"
  GORILLA_USE_PARQUET_HISTORY_STORE: "true"
  GORILLA_PARQUET_PORT: "8087"
  GORILLA_RUN_UPDATE_QUEUE_ADDR: "internal://"
  GORILLA_RUN_STORE_ONPREM_MIGRATE_CREATE_RUN_STORE: "true"
  GORILLA_RUN_STORE_ONPREM_MIGRATE_CREATE_RUN_TABLES: "true"
  GORILLA_RUN_STORE_ONPREM_MIGRATE_FLAT_RUNS_MIGRATOR: "true"
  GORILLA_FILE_STORE_IS_PROXIED: "false"
  GORILLA_ACTIVITY_STORE_SERVE: "true"
  GORILLA_GLUE_TASK_CONFIG_PATH: "/gorilla_glue_tasks_local.yaml"
  GORILLA_ONPREM: "true"
  GORILLA_STATSD_PORT: "8125"
  GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE: "true"
  GORILLA_ARTIFACT_GC_ENABLED: "false"
  GORILLA_RUN_STORE_ONPREM_MIGRATE_SHADOW_RUN_UPDATES: "true"
  GORILLA_GLUE_TASK_PROVIDER: "memory://"
  GORILLA_DEFAULT_REGION: "{{ default .Values.global.cloudProvider "minio" }}-{{ .Values.global.bucket.region | default .Values.global.defaultBucket.region }}"
  GORILLA_FILE_STORE: "{{ include "wandb.bucket" . | trim }}"
  GORILLA_STORAGE_BUCKET: "{{ include "wandb.bucket" . | trim }}"
  {{- if .Values.global.executor.enabled }}
  GORILLA_TASK_QUEUE: "{{ include "app.redis" . | trim }}"
  GORILLA_TASK_QUEUE_WORKER_ENABLED: "false"
  {{- else }}
  GORILLA_TASK_QUEUE: "noop://"
  GORILLA_TASK_QUEUE_WORKER_ENABLED: "false"
  {{- end }}