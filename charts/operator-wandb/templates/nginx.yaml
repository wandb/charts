{{- if eq .Values.ingress.use "nginx" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
spec:
  type: LoadBalancer
  selector:
    matchLabels:
      {{- include "wandb.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 80;

        location / {
          proxy_pass http://{{ .Release.Name }}-app;
        }

        location /console {
          proxy_pass http://{{ .Release.Name }}-console;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  annotations:
    {{- include "wandb.deploymentAnnotations" $ | nindent 4 }}
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "wandb.selectorLabels" . | nindent 8 }}
      app.kubernetes.io/component: nginx
  template:
    metadata:
      annotations:
        {{- include "wandb.deploymentAnnotations" $ | nindent 4 }}
        checksum/config: {{ include (print $.Template.BasePath "/nginx.yaml") . | sha256sum }}
      labels:
        {{- include "wandb.podLabels" . | nindent 8 }}
    spec:
      {{- if .tolerations }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}
      {{- end }}
      {{- include "wandb.nodeSelector" . | nindent 6 }}
      {{- include "wandb.priorityClassName" . | nindent 6 }}
      {{- include "wandb.podSecurityContext" .Values.pod.securityContext | nindent 6 }}
      terminationGracePeriodSeconds: 60
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf

      volumes:
      - name: config-volume
        configMap:
          name: nginx-config

{{- end }}