apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wandb.fullname" . }}
  labels:
    {{- include "wandb.labels" . | nindent 4 }}
    app.kubernetes.io/component: local
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "wandb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        {{- include "wandb.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: local
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wandb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if not .Values.mysql.host }}
      - name: init-db
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        env:
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "wandb.fullname" . }}-secrets
                key: MYSQL_PASSWORD
          - name: DB_HOST
            value: {{ include "wandb.mysqlHost" . }}
          - name: DB_USER
            value: {{ default "wandb_local" .Values.mysql.user }}
          - name: DB
            value: {{ default "wandb_local" .Values.mysql.database }}
        command: ['bash', '-c', "until mysql -h$DB_HOST -u$DB_USER -p$DB_PASSWORD -D$DB --execute=\"SELECT 1\"; do echo waiting for db; sleep 2; done"]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: GORILLA_MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: gorilla
                  resource: requests.memory
            - name: GORILLA_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: gorilla
                  resource: limits.memory
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.fullname" . }}-secrets
                  key:  MYSQL_PASSWORD
            - name: DB_USER
              value: {{ default "wandb_local" .Values.mysql.user }}
            - name: DB
              value: {{ default "wandb_local" .Values.mysql.database }}
            - name: DB_HOST
              value: {{ default (include "wandb.mysqlHost" .) .Values.mysql.host }}
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.fullname" . }}-secrets
                  key: LICENSE
            - name: GLOBAL_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.fullname" . }}-secrets
                  key: ADMIN_API_KEY
            - name: WANDB_HELM_CHART
              value: {{ include "wandb.fullname" . }}:{{ .Chart.Version }}
            {{- if .Values.smtpServer }}
            - name: GORILLA_EMAIL_SINK
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.fullname" . }}-secrets
                  key: SMTP_SERVER
            {{- end }}
            {{- if .Values.bucket }}
            - name: BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.fullname" . }}-secrets
                  key: BUCKET
            - name: AWS_REGION
              value: {{ .Values.bucketRegion | default .Release.Namespace }}
            - name: AWS_S3_KMS_ID
              value: {{ .Values.bucketKmsKeyArn }}
            - name: BUCKET_QUEUE
              value: {{ default "internal://" .Values.bucketQueue }}
            {{- end }}
            - name: MYSQL
              value: {{ "mysql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST)/$(DB)" }}
            - name: HOST
              value: {{ .Values.host | default "http://localhost:8080" }}
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          startupProbe:
            httpGet:
              path: /ready
              port: http
            failureThreshold: 120
          {{- if not .Values.bucket }}
          volumeMounts:
            - name: wandb-data
              mountPath: /vol
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (not .Values.bucket) .Values.existingClaim }}
      volumes:
        - name: wandb-data
          persistentVolumeClaim:
            claimName: {{ .Values.existingClaim | default (include "wandb.volumeClaim" .) }}
      {{- end }}
---
{{- if and (not .Values.bucket) (not .Values.existingClaim)  }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "wandb.volumeClaim" . }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    {{- include "wandb.labels" . | nindent 4 }}
    app.kubernetes.io/component: local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 64Gi
{{- end }}
